<DataTemplate x:Key="MyArrowUpColumnHeaderTemplate">
	<StackPanel Orientation="Horizontal" >
		<TextBlock Text="{Binding}" /> 
		<Path StrokeThickness="1" Fill="{DynamicResource MyBlueSolidBrush2}" Data="M 0,4 L 3.5,0 L 7,4 Z" Margin="10,7,0,0"/>
	</StackPanel>
</DataTemplate>

<DataTemplate x:Key="MyArrowDownColumnHeaderTemplate">
	<StackPanel Orientation="Horizontal" >
		<TextBlock Text="{Binding}" /> 
		<Path StrokeThickness="1" Fill="{DynamicResource MyBlueSolidBrush2}" Data="M 0,0 L 3.5,4 L 7,0 Z" Margin="10,7,0,0"/>
	</StackPanel>
</DataTemplate>

*******************************************************

ButtonBase.Click="myGridViewColumnHeader_Click" x:Name="myListView" 

*******************************************************

private GridViewColumnHeader lastHeaderClicked = null;
private ListSortDirection lastDirection = ListSortDirection.Ascending;

private void myGridViewColumnHeader_Click(object sender, RoutedEventArgs e) 
{
	GridViewColumnHeader headerClicked = e.OriginalSource as GridViewColumnHeader;
	ListSortDirection direction;

	if (headerClicked != null) {
		if (headerClicked.Role != GridViewColumnHeaderRole.Padding) {
			if (headerClicked != lastHeaderClicked) {
				direction = ListSortDirection.Ascending;
			} else {
				if (lastDirection == ListSortDirection.Ascending) {
					direction = ListSortDirection.Descending;
				} else {
					direction = ListSortDirection.Ascending;
				}
			}

			if (headerClicked.Column.Header is string) {
				string header = headerClicked.Column.Header as string;
				Sort(header, direction);
			} else if (headerClicked.Column.Header is Image) {
				Image header = headerClicked.Column.Header as Image;
				string type = header.Source.ToString();
				if (type.Contains("attachment")) {
					Sort("Attachment", direction);
				} else if (type.Contains("mailType")) {
					Sort("Read", direction);
				} else if (type.Contains("importance")) {
					Sort("Importance", direction);
				} else {
					return;
				}
			} else {
				return;
			}

			// Add arrow to the column header if it is a string
			if (headerClicked.Column.Header is string) {
				if (direction == ListSortDirection.Ascending) {
					headerClicked.Column.HeaderTemplate = 
((ListView)sender).Resources["MyArrowUpColumnHeaderTemplate"] as DataTemplate;
				} else {
					headerClicked.Column.HeaderTemplate =
((ListView)sender).Resources["MyArrowDownColumnHeaderTemplate"] as DataTemplate;
				}
			}

			// Remove arrow from previously sorted header
			if (lastHeaderClicked != null && lastHeaderClicked != headerClicked) {
				lastHeaderClicked.Column.HeaderTemplate = null;
			}

			// Update sorting information
			lastHeaderClicked = headerClicked;
			lastDirection = direction;
		}
	}
}

private void Sort(string sortBy, ListSortDirection direction)
{
	ICollectionView dataView =
			CollectionViewSource.GetDefaultView(myListView.ItemsSource);
	dataView.SortDescriptions.Clear();
	SortDescription sd = new SortDescription(sortBy, direction);
	dataView.SortDescriptions.Add(sd);
}
